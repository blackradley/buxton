-depString = "setDependencyTrue('#{question_issues[:id]}_issues'); checkDependancy('#{question_issues[:id]}','#{question_issues[:id]}_issues', '1'); "
%p.question{:id => "#{question_issues[:id]}", :onclick => "setFocus(\'more_#{question_issues[:id]}\',\'#{question_issues[:id]}\'); #{depString}", :onchange => "#{depString}", :style => "display:block;"}
  %label
    =question_issues[:label]
  %labelled
    -case question_issues[:input_type]    
      -when :text
        = f.text_area question_issues[:id]
      -when :string
        = f.text_field question_issues[:id]
      -when :select
        = f.select "#{question_issues[:id]}", question_issues[:input_choices]  
  
-displayString = "none"
-if @activity.send(question_issues[:id]).to_s == '1'
  -displayString = "block"

.more{:id => "more_" + "#{question_issues[:id]}_issues", :style => "display:none"}
  
.question.sub{:id => "#{question_issues[:id]}_issues", :onclick => "setFocus(\'more_#{question_issues[:id]}_issues\',\'#{question_issues[:id]}_issues\');", :style => "display:#{displayString};"}
  %label 
    Please record each of the discrete issues identified in the space below and when you have finished click save.
  %span#issues_list
    = render :partial => 'issues/issue', :collection => @activity.issues_by(@section, @equality_strand)
  .clear
  %span.add_issue
    = link_to_function "Add a New Issue" do |page| 
      - page.insert_html :bottom, :issues_list, :partial => 'issues/issue', :object => Issue.new
  .clear
