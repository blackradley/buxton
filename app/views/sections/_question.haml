.more{:id => "more_" + "#{question[:id]}", :style => "display:none"}
  %h3
    =image_tag ("icons/help.gif")
    Help:
  -if question[:help]!=''
    .help
      =question[:help]
  -else
    %p.nohelp Sorry - no help text for this question.
  %h3
    =image_tag ("icons/comment.gif")
    Comment for report:
  - opt = ['none', 'block']
  - flag = (question[:comment] !='' ? 1 : 0) 
  .normalcommentview{:id => "#{question[:id]}_comment_view", :style => "display:#{opt[flag]}"}
    %p.comment{:id => "#{question[:id]}_comment"}
      =split_long_strings(question[:comment])
    .control
      =image_tag ("icons/comment_delete.gif")
      =link_to_remote "Delete", :url => {:action => 'destroy', :controller => :comment, :question_id => question[:full_question].id}, :confirm => "Delete this comment?", :update => "#{question[:id]}_comment", :complete => "cancel_comment('#{question[:id]}');"
    .control
      =image_tag ("icons/comment_edit.gif")
      =link_to_function "Edit", "edit_comment('#{question[:id]}');"
  .new_comment{:id => "#{question[:id]}_comment_new", :style => "display:#{opt[1 - flag]}"}
    .control
      =image_tag ("icons/comment_add.gif")
      =link_to_function "Add new comment for report", "new_comment('#{question[:id]}');"
  .commentform{:id => "#{question[:id]}_comment_form", :style => "display:none"}
    =text_area_tag "comment", question[:comment], :id => "#{question[:id]}_comment_fill_in"
    = link_to_remote "Save", :url => {:action => 'edit', :controller => :comment, :question_id => question[:full_question].id}, :with => "'comment='+document.getElementById('#{question[:id]}_comment_fill_in').value", :update => "#{question[:id]}_comment", :complete => "edit_comment('#{question[:id]}');"
    |
    =link_to_function "Cancel", "cancel_comment('#{question[:id]}');"
  %h3
    =image_tag ("icons/note.gif")
    Note to myself:
  - flag = (question[:note] !='' ? 1 : 0) 
  .normalnoteview{:id => "#{question[:id]}_note_view", :style => "display:#{opt[flag]}"}
    %p.note{:id => "#{question[:id]}_note"}
      =split_long_strings(question[:note])
    .control
      =image_tag ("icons/note_delete.gif")
      =link_to_remote "Delete", :url => {:action => 'destroy', :controller => :note, :question_id => question[:full_question].id}, :confirm => "Delete this note?", :update => "#{question[:id]}_note", :complete => "cancel_note('#{question[:id]}');"
    .control
      =image_tag ("icons/note_edit.gif")
      =link_to_function "Edit", "edit_note('#{question[:id]}');"
  .new_note{:id => "#{question[:id]}_note_new", :style => "display:#{opt[1 - flag]}"}
    .control
      =image_tag ("icons/note_add.gif")
      =link_to_function "Add new note to myself", "new_note('#{question[:id]}');"
  .noteform{:id => "#{question[:id]}_note_form", :style => "display:none"}
    =text_area_tag "note", question[:note], :id => "#{question[:id]}_note_fill_in"
    = link_to_remote "Save", :url => {:action => 'edit', :controller => :note, :question_id => question[:full_question].id}, :with => "'note='+document.getElementById('#{question[:id]}_note_fill_in').value", :update => "#{question[:id]}_note", :complete => "edit_note('#{question[:id]}');"
    |
    =link_to_function "Cancel", "cancel_note('#{question[:id]}');"
-if question[:dependents][0] 
  -depString = ""
  -question[:dependents].each do |dep|
    -depString << "setDependencyTrue('#{dep[0]}'); checkDependancy('#{question[:id]}','#{dep[0]}', '#{dep[1]}'); " rescue nil
    -unless [@activity.parents[dep[0].to_s]].flatten[0] == question[:id] then
      -depString << "checkDependancy('#{@activity.parents[dep[0].to_s][0]}','#{dep[0]}', '#{@activity.parents[dep[0].to_s][1]}'); " rescue nil
-if question[:dependency]
  -displayString = "none"
  -if @activity.send(question[:dependency][0][0].to_sym)
    -if @activity.send(question[:dependency][0][0].to_sym).to_s == question[:dependency][0][1]
      -displayString = "block"
    
  %p.question.sub{:id => "#{question[:id]}", :onclick => "setFocus(\'more_#{question[:id]}\',\'#{question[:id]}\'); #{depString}", :onchange => "#{depString}", :style => "display:#{displayString};"}
    %label
      =question[:label]
    %labelled
      -case question[:input_type]    
        -when :text
          = f.text_area question[:id]
        -when :string
          = f.text_field question[:id]
        -when :select
          = f.select "#{question[:id]}", question[:input_choices]
-else
  %p.question{:id => "#{question[:id]}", :onclick => "setFocus(\'more_#{question[:id]}\',\'#{question[:id]}\'); #{depString}", :onchange => "#{depString}", :style => "display:block;"}
    %label
      =question[:label]
    %labelled
      -case question[:input_type]    
        -when :text
          = f.text_area question[:id]
        -when :string
          = f.text_field question[:id]
        -when :select
          = f.select "#{question[:id]}", question[:input_choices]

